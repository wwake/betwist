
* Draw Shapes instead of Buttons
* On dragEnded, update location
* Move during onChange, not just onEnded
* Determine how many cells worth you moved
* Debounce during the drag process
* Change the scrolling
* Do we need directions?

* Warn on duplicate words
* Sort answers

* Mark prefix words in a different color (or other indication)

* Use list of words instead of searching whole dictionary during game

* Don't generate the full list until later

* Running count or score


* Demo mode for first-time use (drop those arrows!)

* New game

* Set parameters (eg board size)

* Sound

* Animation - experiment with opacity [defer]

* Twist up - draws funny on first time only - simplify case & file a report?

Unbounded

Behext? - https://betterprogramming.pub/building-a-hexagonal-grid-with-the-swiftui-layout-protocol-f7b0efeeacbf

Triangles
Tessellations?

Ideas for faster lookup
* Try a 3- or 4-letter prefix dictionary
* Bloom filter - multiple hashes for a probabilistic answer
* Generate full list of words for board - with some performance improvements

2024-10-14 - WORD-24-12 - Refactor allAnswers()
* Refactor allAnswers and tryAllExtensions to reduce duplication
* Show potential next letters as italic, with a red border
* Extract GridView from ContentView, and LetterView from GridView; pull out other views from ContentView as functions

2024-10-10 - WORD-24-11 - Find All Words Faster (10x?)
* Try a word set - sped up some
* Compute "contains" and "hasPrefix" at the same time - sped up enough to keep

2024-10-09 - Word-24-10 - Performance
* Change from linear to binary search - reduced time to find all words to a couple seconds
* Try splitting dictionary by first letter - ran a little slower

2024-10-08 - WORD-24-09 - Partial Credit
* When you submit a long word, credit any shorter words that start it
* Make vocabulary know whether a string is a prefix of a longer word
* Find all words for a board ('the answers') - our first version worked but took ~2.5 hours to compute it

2024-10-07 - WORD-24-08 - Size-Sensitive Views
* Make the whole button sensitive to touch, not just the letter only
* Fixed cell size (now 48x48)
* Give the first cell a gray border
* Add letter-grid colors to the asset catalog
* Assign persistent colors to cell backgrounds
* Spike moving while dragging

2024-10-3 - WORD-24-07 - Some Rules, & a Better View
* Pop out list of guessed words
* No message for length of 0
* Improved set of generated letters
* Double-tap last letter submits word
* No duplicates - move word to the top of the list

2024-10-02 - WORD-24-06 - Only Dictionary Words!
* Defect fixed - tapping a letter while the "collect" animations runs adds the letter to the guess that's moving down
* Add error message display
* Show error when word too short
* Don't reset selection for invalid words
* Dictionary - ("That's not a word!")
* Make guess change color if message shown
* Improve format of partial word
* Add icon to left of partial word (for visual balance)

2024-10-01 - WORD-24-05 - Let's Twist Again
* Add animation to twisting
* Change zIndex so word sliding down is in front
* Improve the buttons for twisting
* Create a separate object for twisting ("Twister")
* Allow swipe for twisting
  + https://stackoverflow.com/questions/60885532/how-to-detect-swiping-up-down-left-and-right-with-swiftui-on-a-view
  + https://stackoverflow.com/questions/58891309/swiftui-how-to-implement-swipgesture
  + https://www.hackingwithswift.com/books/ios-swiftui/how-to-use-gestures-in-swiftui
* Add a checkbox to commit word

2024-09-30 - WORD-24-04 - Show Guesses
* Put the word list in a scrollable view (rather than popping up as a sheet)
* Add the newest guess to the front of the list
* Game maker (generate random boards)
* Twist UDLR for the grid

2024-09-26 - WORD-24-03 - Highlight Selection
* Highlight selected letters
* Highlight the last letter differently
* Improve board's formatting
* Submit a word - and clear selection
* Minimal version - Show the list of accepted words
* Added some animation

2024-09-25 - WORD-24-02 - Selecting Words
* Extend a selection to a neighbor
* Click away from neighbor to start new one
* Initial UI showing board and selection

2024-09-24 - WORD-24-01 - Introducing Betwist
* Introduce the game idea
* Created basic Board, with wrapping indexes
* Started on Selection, appending the first selected location
